//Búsqueda binaria
/*La búsqueda binaria se encarga de encontrar un número en un determinado vector, por ejemplo, si tenemos un vector de 32 posiciones, la búsqueda binaria buscará el número
objetivo dentro del vector buscando desde la mitad hacia los lados, por ejemplo, 32/2 = 16, si el número en la posición 16 es mayor al número buscado, entonces eliminaremos 
los números de la posición 16 a la 32 y buscaremos de la 0 a la 15 y así sucesivamente*/
/*
/*Dicho algoritmo tiene una notación asintótica de log2(n)*/
//Ejemplo de búsqueda binaria
#include <bits/stdc++.h>
using namespace std;
int p[100001];

int binarySearch (int aux,int puertas){
    int inf=0,sup=puertas-1;
    while(inf<=sup){
        int mid= (inf+sup)/2;
        if(p[mid]==aux){
            return mid+1;
        }else if(p[mid] < aux){
            inf=mid+1;
        }else if(p[mid] > aux){
            sup=mid-1;
        }
    }
    return 0;
}

int main(){
    ios_base:: sync_with_stdio(0);
    cin.tie(0); cout.tie(0);

    int puertas,llaves,aux,res;
    cin>>puertas;
    for(int i=0;i<puertas;i++){
        cin>>p[i];
    }
    cin>>llaves;
    for(int i=0;i<llaves;i++){
        cin>>aux;
        res= binarySearch(aux,puertas);
        cout<<res<<" ";
    }
    return 0;
}
